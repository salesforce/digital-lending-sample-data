<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls an action that creates a Contract record and triggers contract generation. Stores the IDs of contracts that are created.</description>
        <name>CreateContract</name>
        <label>Create Contract</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <actionName>createClmContract</actionName>
        <actionType>createClmContract</actionType>
        <connector>
            <targetReference>IterateOverContracts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SendContractGenFailureEmail</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>sourceRecordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>contractRecordType</name>
            <value>
                <elementReference>ContractRecordType</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>documentTemplateName</name>
            <value>
                <elementReference>DocumentTemplateName</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>isCreateContractDocument</name>
            <value>
                <elementReference>IsAutoDocGen</elementReference>
            </value>
        </inputParameters>
        <nameSegment>createClmContract</nameSegment>
        <outputParameters>
            <assignToReference>Contracts</assignToReference>
            <name>contractId</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that gets the document template name and document template ID from the Business Rules Engine decision matrix.</description>
        <name>GetDocumentTemplateDetails</name>
        <label>Get Document Template Details</label>
        <locationX>974</locationX>
        <locationY>539</locationY>
        <actionName>Get_Document_Template_from_Product</actionName>
        <actionType>runDecisionMatrix</actionType>
        <connector>
            <targetReference>AssignDocumentTemplateDetails</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>ProductId</name>
            <value>
                <elementReference>$Record.Product.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Status</name>
            <value>
                <elementReference>$Record.Stage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Get_Document_Template_from_Product</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends an email to the system admin if the Create Contract action fails.</description>
        <name>SendContractGenFailureEmail</name>
        <label>Send Contract Generation Failure Email</label>
        <locationX>314</locationX>
        <locationY>1079</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>SystemAdminEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>ErrorSubjectContractDocGen</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends an email to the system admin if the document generation record creation fails.</description>
        <name>SendDocGenProcessFailureEmail</name>
        <label>Send Document Generation Process Failure Email</label>
        <locationX>842</locationX>
        <locationY>1079</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>SystemAdminEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>ErrorSubjectDocGenProcess</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>ErrorBodyDocGenProcess</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <description>Sets the document template name and document template ID to the DocumentTemplateName and DocumentTemplateId variables.</description>
        <name>AssignDocumentTemplateDetails</name>
        <label>Assign Document Template Details</label>
        <locationX>974</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>DocumentTemplateName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetDocumentTemplateDetails.DocumentTemplate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>DocumentTemplateId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetDocumentTemplateDetails.DocumentTemplateId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AreDocTemplateDetailsAvailable</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the Term from the current item in the loop to sumTerm.</description>
        <name>CalculateSumTerm</name>
        <label>Calculate Sum Term</label>
        <locationX>138</locationX>
        <locationY>1661</locationY>
        <assignmentItems>
            <assignToReference>sumTerm</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverAppFormProductProposals.Term</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverAppFormProductProposals</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the ContractId variable to the ID of the current item in the loop.</description>
        <name>SetContractId</name>
        <label>Set Contract ID</label>
        <locationX>138</locationX>
        <locationY>1187</locationY>
        <assignmentItems>
            <assignToReference>ContractId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateOverContracts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetApplicationFormProductProposals</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the body of the email sent to the system admin if the document generation record creation fails.</description>
        <name>ErrorBodyDocGenProcess</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Document Generation Process record was not inserted due to an error.</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the subject of the email sent to the system admin if the Create Contract action fails.</description>
        <name>ErrorSubjectContractDocGen</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Contract generation failure</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the subject of the email sent to the system admin if the document generation record creation fails.</description>
        <name>ErrorSubjectDocGenProcess</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Document Generation Process Insert error</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the email address of the admin an email is sent to if the document generation record creation fails.</description>
        <name>SystemAdminEmail</name>
        <dataType>String</dataType>
        <value>
            <stringValue>system_admin_email</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Determines if the DocumentTemplateId and DocumentTemplateName were returned by the Business Rules Engine decision matrix.</description>
        <name>AreDocTemplateDetailsAvailable</name>
        <label>Are Document Template Details Available?</label>
        <locationX>974</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>DocTemplateDetailsAreAvailable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>DocumentTemplateId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>DocumentTemplateName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>WhatIsApplicationFormProductStage</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the application form product Stage is Contract Generation and whether a record from the Get Contract element exists.</description>
        <name>IsApplnFormProdtStageContractGeneration</name>
        <label>Is Application Form Product Stage Contract Generation?</label>
        <locationX>336</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>GetDocumentTemplateDetails</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsContractGeneration</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Stage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contract Generation</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetContract</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the application form product Stage is Contract Generation or either Customer Rejected or Underwriter Rejected.</description>
        <name>WhatIsApplicationFormProductStage</name>
        <label>What is Application Form Product Stage?</label>
        <locationX>578</locationX>
        <locationY>863</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsStageContractGeneration</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Stage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contract Generation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateContract</targetReference>
            </connector>
            <label>Contract Generation</label>
        </rules>
        <rules>
            <name>IsRejected</name>
            <conditionLogic>1 OR 2</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Stage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Customer Rejected</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Stage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Underwriter Rejected</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateDocumentGenerationProcess</targetReference>
            </connector>
            <label>Rejected</label>
        </rules>
    </decisions>
    <description>Generates or updates a contract when an application form product is updated.</description>
    <environments>Default</environments>
    <formulas>
        <description>Stores the JSON input for the Data Mapper.</description>
        <name>DataMapperInputFormula</name>
        <dataType>String</dataType>
        <expression>&quot;{\&quot;ApplicationFormProductId\&quot;:\&quot;&quot;&amp;{!$Record.Id}&amp;&quot;\&quot;}&quot;</expression>
    </formulas>
    <interviewLabel>Sample Digital Lending: Generate or Update Contract Clone {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Sample Digital Lending: Generate or Update Contract Clone</label>
    <loops>
        <description>Repeats actions for each individual application record in theGet Application Form Product Proposals from Get Application Form Product Proposals record collection variable.</description>
        <name>IterateOverAppFormProductProposals</name>
        <label>Iterate Over Application Form Product Proposals</label>
        <locationX>50</locationX>
        <locationY>1553</locationY>
        <collectionReference>GetApplicationFormProductProposals</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>CalculateSumTerm</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateContract</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeat actions for each individual contract ID in Contracts record collection variable.</description>
        <name>IterateOverContracts</name>
        <label>Iterate Over Contracts</label>
        <locationX>50</locationX>
        <locationY>1079</locationY>
        <collectionReference>Contracts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SetContractId</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetApplicationFormProductProposals</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creates a document generation process record. Sets the DataMapperInput field to the Data Mapper Input Formula value, Document Input Type to Document Template, Document Template ID to the DocumentTemplateId value, Reference Object to ID of the record that triggered the flow, Request Text to title loan rejection, and Type to GenerateAndConvert.</description>
        <name>CreateDocumentGenerationProcess</name>
        <label>Create Document Generation Process</label>
        <locationX>578</locationX>
        <locationY>971</locationY>
        <faultConnector>
            <targetReference>SendDocGenProcessFailureEmail</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>DataRaptorInput</field>
            <value>
                <elementReference>DataMapperInputFormula</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DocumentInputType</field>
            <value>
                <stringValue>DocumentTemplate</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DocumentTemplateId</field>
            <value>
                <elementReference>DocumentTemplateId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ReferenceObject</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RequestText</field>
            <value>
                <stringValue>{&quot;title&quot;:&quot;Loan Rejection&quot;,&quot;keepIntermediate&quot;:true}</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>GenerateAndConvert</stringValue>
            </value>
        </inputAssignments>
        <object>DocumentGenerationProcess</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Get Application Form Product Proposal records with an ApplicationFormProductId that equals the ID of the flow triggering record, IsActive equals True, and Stage equals Final. Stores the ID and Term of the results in the Get Application Form Product Proposals from Get Application Form Product Proposals record collection variable.</description>
        <name>GetApplicationFormProductProposals</name>
        <label>Get Application Form Product Proposals</label>
        <locationX>50</locationX>
        <locationY>1445</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverAppFormProductProposals</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ApplicationFormProductId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Stage</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Final</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ApplicationFormProductProposal</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Term</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the contract record with a source application form product that equals the ID of the record that triggered the flow.</description>
        <name>GetContract</name>
        <label>Get Contract</label>
        <locationX>336</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsApplnFormProdtStageContractGeneration</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SourceApplicationFormProduct__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contract</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Updates the contract record with an ID matching ContractId. Sets the FinalTerm value in the Contract Term field.</description>
        <name>UpdateContract</name>
        <label>Update Contract</label>
        <locationX>50</locationX>
        <locationY>1853</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ContractId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ContractTerm</field>
            <value>
                <elementReference>sumTerm</elementReference>
            </value>
        </inputAssignments>
        <object>Contract</object>
    </recordUpdates>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetContract</targetReference>
        </connector>
        <filterLogic>(1 OR 2 OR 3) AND 4</filterLogic>
        <filters>
            <field>Stage</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Customer Rejected</stringValue>
            </value>
        </filters>
        <filters>
            <field>Stage</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Contract Generation</stringValue>
            </value>
        </filters>
        <filters>
            <field>Stage</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Underwriter Rejected</stringValue>
            </value>
        </filters>
        <filters>
            <field>Stage</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>ApplicationFormProduct</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the contract ID of the contract created by the Create Contract action.</description>
        <name>ContractId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the record type of the contract record that is created.</description>
        <name>ContractRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>ContractLifecycleManagement</stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores the collection of contract IDs created by the Create Contract action.</description>
        <name>Contracts</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the document template ID from the business rules engine decision matrix Get_Document_Template_from_Product.</description>
        <name>DocumentTemplateId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the document template name from the business rules engine decision matrix Get_Document_Template_from_Product.</description>
        <name>DocumentTemplateName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores a boolean value that indicates whether to create a contract document in addition to the contract.</description>
        <name>IsAutoDocGen</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the sum of the term fields on the application form product proposals.</description>
        <name>sumTerm</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
</Flow>
