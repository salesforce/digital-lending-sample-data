<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Calls an action that checks in a contract with the ID of the record in the ContractDocumentVersion variable.</description>
        <name>CheckInContract</name>
        <label>Check In Contract</label>
        <locationX>50</locationX>
        <locationY>924</locationY>
        <actionName>checkInContractDocumentVersion</actionName>
        <actionType>checkInContractDocumentVersion</actionType>
        <connector>
            <targetReference>SendContractForEsignEmail</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SetVariablesForContractCheckInErrorEmail</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>contractDocumentVersionId</name>
            <value>
                <elementReference>ContractDocumentVersion.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>isSaveWhenActionCompletes</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>checkInContractDocumentVersion</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends an email to the recipients to sign the contract.</description>
        <name>SendContractForEsignEmail</name>
        <label>Send Email</label>
        <locationX>50</locationX>
        <locationY>1032</locationY>
        <actionName>sendContractForESignature</actionName>
        <actionType>sendContractForESignature</actionType>
        <faultConnector>
            <targetReference>SetEsignErrorEmail</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>contractId</name>
            <value>
                <elementReference>Contract.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>getRecipientsApexClassName</name>
            <value>
                <elementReference>DefaultRecipientsApexClass</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>getDocumentsApexClassName</name>
            <value>
                <elementReference>DefaultDocumentsApexClass</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateName</name>
            <value>
                <stringValue>{!ContractEmailTemplate}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>eSignatureVendorName</name>
            <value>
                <stringValue>{!VendorName}</stringValue>
            </value>
        </inputParameters>
        <nameSegment>sendContractForESignature</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends an email to the system admin when the status of the triggering Document Generation Process record isn’t Success.</description>
        <name>SendDocGenerationFailureEmail</name>
        <label>Send Document Generation Failure Email</label>
        <locationX>2514</locationX>
        <locationY>600</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>SystemAdminEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>DocumentGenerationErrorEmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>DocGenNotSucccesfulEmailBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends an email to the system admin when the document generation isn’t successful.</description>
        <name>SendDocumentGenerationErrorEmail</name>
        <label>Send Error Email</label>
        <locationX>1106</locationX>
        <locationY>492</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>SystemAdminEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>{!DocumentGenerationErrorEmailSubject}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <stringValue>{!DocGenNotSucccesfulEmailBody}</stringValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends an email to the system admin when there’s an error checking in the contract or sending the email to recipients.</description>
        <name>SendErrorEmail</name>
        <label>Send Error Email</label>
        <locationX>578</locationX>
        <locationY>1140</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>SystemAdminEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>CheckInErrorEmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>ErrorEmailBody</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Calls an action that sends an email to the applicant when the stage of the Application Form Product is set to Customer Rejected or Underwriter Rejected.</description>
        <name>SendLoanRejectionEmail</name>
        <label>Send Loan Rejection Email</label>
        <locationX>2074</locationX>
        <locationY>1248</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>IterateOverIndividualApplicants</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>ApplicantEmail</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>{!LoanRejectionEmailSubject}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <stringValue>{!LoanRejectionEmailBody}</stringValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <description>Sets ApplicantEmail to the email of the current record in IterateOverIndividualApplicants.</description>
        <name>SetApplicantEmail</name>
        <label>Set Applicant Email</label>
        <locationX>2074</locationX>
        <locationY>1140</locationY>
        <assignmentItems>
            <assignToReference>ApplicantEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateOverIndividualApplicants.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendLoanRejectionEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the email body and subject variables for the email that’s sent to the system admin when there’s an error sending the contract for e-sign.</description>
        <name>SetEsignErrorEmail</name>
        <label>Set E-Sign Error Email</label>
        <locationX>314</locationX>
        <locationY>1140</locationY>
        <assignmentItems>
            <assignToReference>ErrorEmailBody</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ErrorEmailSubject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SendEsignEmailErrorSubject</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>SendErrorEmail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the email body and subject variables for the email that’s sent to the system admin when there’s an error checking in the contract.</description>
        <name>SetVariablesForContractCheckInErrorEmail</name>
        <label>Set Variables for Contract Check-In Error Email</label>
        <locationX>578</locationX>
        <locationY>1032</locationY>
        <assignmentItems>
            <assignToReference>ErrorEmailBody</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ErrorEmailSubject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CheckinContractFailureSubject</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SendErrorEmail</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the key prefix of the application form product record.</description>
        <name>ApplicationFormProductKeyPrefix</name>
        <dataType>String</dataType>
        <value>
            <stringValue>13Z</stringValue>
        </value>
    </constants>
    <constants>
        <description>Checkin Contract Failure email subject</description>
        <name>CheckinContractFailureSubject</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Contract checkin action failure</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the key prefix for the document generation process record ID.</description>
        <name>ContractDocumentVersionKeyPrefix</name>
        <dataType>String</dataType>
        <value>
            <stringValue>0qt</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the name of the template that’s used to send the email</description>
        <name>ContractEmailTemplate</name>
        <dataType>String</dataType>
        <value>
            <stringValue>DocusignEmailTemplate</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the list of documents that are sent to recipients for e-sign.</description>
        <name>DefaultDocumentsApexClass</name>
        <dataType>String</dataType>
        <value>
            <stringValue>GetEsignDocuments</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores a list of recipients to send the contract for e-sign.</description>
        <name>DefaultRecipientsApexClass</name>
        <dataType>String</dataType>
        <value>
            <stringValue>GetEsignRecipients</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the body of the email.</description>
        <name>DocGenNotSucccesfulEmailBody</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Something went wrong and we couldn’t generate the document. Contact your system admin.</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the subject of the email. To customize the subject of the email, change this value.</description>
        <name>DocumentGenerationErrorEmailSubject</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Document generation failed</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the body of the email.</description>
        <name>LoanRejectionEmailBody</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Hello, after reviewing your loan application, we regret to inform you that we are unable to approve the loan you requested for. Thank you for thinking of our institution for your lending needs. Please don’t hesitate to approach us in the future. Sincerely, Thank you!</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the subject of the email.</description>
        <name>LoanRejectionEmailSubject</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Loan Application Rejected</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the subject of the email that’s used when there’s an error sending the contract e-sign email  to recipients.</description>
        <name>SendEsignEmailErrorSubject</name>
        <dataType>String</dataType>
        <value>
            <stringValue>E-Sign action failure</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the email address of the system admin. Before activating this flow, replace this value with the email address of the system admin to be notified in case of an error.</description>
        <name>SystemAdminEmail</name>
        <dataType>String</dataType>
        <value>
            <stringValue>system_admin_email</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the name of the vendor for the contract.</description>
        <name>VendorName</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Docusign</stringValue>
        </value>
    </constants>
    <decisions>
        <description>Determines if the Reference Object field on the triggering Document Generation Process record starts with the ApplicationFormProductKeyPrefix.</description>
        <name>DoesReferenceObjectHaveApplicationFormProductKeyPrefix</name>
        <label>Does Reference Object Have Application Form Product Key Prefix?</label>
        <locationX>2745</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>HasApplicationFormProductKeyPrefix</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ReferenceObject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>ApplicationFormProductKeyPrefix</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>WhatIsDocumentGenerationStatus</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the Email field on the current record in the loop has a value and isn’t empty.</description>
        <name>HasApplicantEmail</name>
        <label>Has Email?</label>
        <locationX>2206</locationX>
        <locationY>1032</locationY>
        <defaultConnector>
            <targetReference>IterateOverIndividualApplicants</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>Email_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IterateOverIndividualApplicants.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IterateOverIndividualApplicants.Email</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetApplicantEmail</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if the stage of the record in the ApplicationFormProduct variable is either Customer Rejected or Underwriter Rejected.</description>
        <name>IsApplicationFormProductStageRejected</name>
        <label>Is Application Form Product Stage Rejected?</label>
        <locationX>2118</locationX>
        <locationY>708</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ApplicationFormProductStageIsRejected</name>
            <conditionLogic>1 OR 2</conditionLogic>
            <conditions>
                <leftValueReference>ApplicationFormProduct.Stage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Customer Rejected</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ApplicationFormProduct.Stage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Underwriter Rejected</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetApplicants</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the content document version is the source for document generation by checking if the source object ID of triggering document generation process record starts with the ContractDocumentVersionKeyPrefix.</description>
        <name>IsContractDocumentVersionSourceOfDocumentGeneration</name>
        <label>Is Contract Document Version Source of  Document Generation?</label>
        <locationX>1826</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>DoesReferenceObjectHaveApplicationFormProductKeyPrefix</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>ContractDocumentVersionIsSource</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SourceObjectId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>ContractDocumentVersionKeyPrefix</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>WhatIsContractDocumentGenerationStatus</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines if the stage of Application Form Product Record Stage field is Contract Generation.</description>
        <name>IsStageContractGeneration</name>
        <label>Is Stage Contract Generation?</label>
        <locationX>446</locationX>
        <locationY>816</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsContractGeneration</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>ApplicationFormProduct.Stage</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contract Generation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CheckInContract</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines the status of the triggering contract document generation process record.</description>
        <name>WhatIsContractDocumentGenerationStatus</name>
        <label>What is Contract Document Generation Status?</label>
        <locationX>908</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Other (Default)</defaultConnectorLabel>
        <rules>
            <name>IsSuccessContract</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContractDocumentVersion</targetReference>
            </connector>
            <label>Success</label>
        </rules>
        <rules>
            <name>IsFailureContract</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SendDocumentGenerationErrorEmail</targetReference>
            </connector>
            <label>Failure</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines the status of the triggering document generation process record.</description>
        <name>WhatIsDocumentGenerationStatus</name>
        <label>What is Document Generation Status?</label>
        <locationX>2448</locationX>
        <locationY>492</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>IsSuccess</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Success</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetApplicationFormProduct</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>IsFailure</name>
            <conditionLogic>1</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Failure</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SendDocGenerationFailureEmail</targetReference>
            </connector>
            <label>Failure</label>
        </rules>
    </decisions>
    <description>When the contract document generation is the source object of the document generation process record, get the source object ID, Contract ID, and Application Form Product, and send the contract for e-signature.</description>
    <environments>Default</environments>
    <interviewLabel>Sample Digital Lending: Update Document Generation Clone {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Sample Digital Lending: Update Document Generation Clone</label>
    <loops>
        <description>Repeats actions for each individual application record in the Applicants record collection variable.</description>
        <name>IterateOverIndividualApplicants</name>
        <label>Iterate Over Individual Applicants</label>
        <locationX>1986</locationX>
        <locationY>924</locationY>
        <collectionReference>Applicants</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>HasApplicantEmail</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets applicant records with an ApplicationFormId matching the Application Form ID in ApplicantFormProduct. Stores the ID and Email of the results in the Applicants record collection variable.</description>
        <name>GetApplicants</name>
        <label>Get Applicants</label>
        <locationX>1986</locationX>
        <locationY>816</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IterateOverIndividualApplicants</targetReference>
        </connector>
        <filterLogic>1</filterLogic>
        <filters>
            <field>ApplicationFormId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ApplicationFormProduct.ApplicationFormId</elementReference>
            </value>
        </filters>
        <object>Applicant</object>
        <outputReference>Applicants</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Gets the application form product record with an ID that matches the ID of the record that triggered the flow. Stores the ID, ApplicationFormId, and Stage of the result in the ApplicationFormProduct record variable.</description>
        <name>GetApplicationFormProduct</name>
        <label>Get Application Form Product</label>
        <locationX>2118</locationX>
        <locationY>600</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsApplicationFormProductStageRejected</targetReference>
        </connector>
        <filterLogic>1</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ReferenceObject</elementReference>
            </value>
        </filters>
        <object>ApplicationFormProduct</object>
        <outputReference>ApplicationFormProduct</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>ApplicationFormId</queriedFields>
        <queriedFields>Stage</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Gets the application form product record with an ID that matches the SourceApplicationFormProduct of the contract record. Stores the ID and the Stage of the result in the ApplicationFormProduct record variable.</description>
        <name>GetApplicationFormProductContract</name>
        <label>Get Application Form Product</label>
        <locationX>446</locationX>
        <locationY>708</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsStageContractGeneration</targetReference>
        </connector>
        <filterLogic>1</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Contract.SourceApplicationFormProduct__c</elementReference>
            </value>
        </filters>
        <object>ApplicationFormProduct</object>
        <outputReference>ApplicationFormProduct</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Stage</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get contract record</description>
        <name>GetContract</name>
        <label>Get Contract</label>
        <locationX>446</locationX>
        <locationY>600</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetApplicationFormProductContract</targetReference>
        </connector>
        <filterLogic>1</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ContractDocumentVersion.ContractId</elementReference>
            </value>
        </filters>
        <object>Contract</object>
        <outputReference>Contract</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>SourceApplicationFormProduct__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Gets the contract document version record with an ID that matches the source object ID the record that triggered the flow. Stores the ID and Contract ID of the result in the ContractDocumentVersion record variable.</description>
        <name>GetContractDocumentVersion</name>
        <label>Get Contract Document Version</label>
        <locationX>446</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetContract</targetReference>
        </connector>
        <filterLogic>1</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SourceObjectId</elementReference>
            </value>
        </filters>
        <object>ContractDocumentVersion</object>
        <outputReference>ContractDocumentVersion</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>ContractId</queriedFields>
    </recordLookups>
    <start>
        <locationX>680</locationX>
        <locationY>0</locationY>
        <filterLogic>(1 OR 2) AND 3</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Success</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Failure</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>DocumentGenerationProcess</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>IsContractDocumentVersionSourceOfDocumentGeneration</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the email address of an applicant.</description>
        <name>ApplicantEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID and Email of applicant records.</description>
        <name>Applicants</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Applicant</objectType>
    </variables>
    <variables>
        <name>ApplicationFormProduct</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ApplicationFormProduct</objectType>
    </variables>
    <variables>
        <description>Stores the subject of the email that’s used when there’s an error checking in the contract.</description>
        <name>CheckInErrorEmailSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the ID and SourceApplicationFormProduct of the contract record that’s used to get the application form product record.</description>
        <name>Contract</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contract</objectType>
    </variables>
    <variables>
        <description>Stores the ID and Contract ID of the triggering contract document version record.</description>
        <name>ContractDocumentVersion</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ContractDocumentVersion</objectType>
    </variables>
    <variables>
        <description>Stores the body of the email.</description>
        <name>ErrorEmailBody</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the subject of the email.</description>
        <name>ErrorEmailSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
